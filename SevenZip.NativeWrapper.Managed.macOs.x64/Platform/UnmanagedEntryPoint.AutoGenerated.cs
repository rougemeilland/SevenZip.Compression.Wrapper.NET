// This file is automatically generated. Do not rewrite manually.

using System;
using System.Runtime.InteropServices;

namespace SevenZip.NativeWrapper.Managed.macOs.x64.Platform
{
    partial class UnmanagedEntryPoint
    {
        /// <summary>
        /// Gets the interface object for accessing the specified IUnknown interface object on the specified interface.
        /// </summary>
        /// <param name="ifp">Set a pointer to the IUnknown interface object.</param>
        /// <param name="iid">Set the reference of the <see cref="NativeGUID"/> structure of the interface you want to access.</param>
        /// <param name="intefaceObject">If the function call is successful, a pointer to the object to access this object will be output on the interface specified by <paramref name="iid"/>.</param>
        /// <returns><para>If <see cref="HRESULT.S_OK"/> is returned, it means that the call to this function was successful.</para><para>If <see cref="HRESULT.E_NOINTERFACE"/> is returned, it means that the call to this function failed because the object specified by <paramref name="ifp"/> does not support the interface specified by <paramref name="iid"/>.</para><para>If a value other than the above is returned, it means that the function call failed due to some error. At this time, the return value means the reason for the error.</para></returns>
        /// <remarks>If the call to this function is successful, the reference counter for the retrieved interface object has already been incremented. When you no longer need that interface object, you need to decrement the reference counter by calling the <see cref="IUnknown__Release(IntPtr)"/> function.</remarks>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IUnknown__QueryInterface")]
        public static extern HRESULT IUnknown__QueryInterface(IntPtr ifp, ref NativeGUID iid, out IntPtr intefaceObject);

        /// <summary>
        /// Increments the object's reference count.
        /// </summary>
        /// <param name="ifp">Set a pointer to the IUnknown interface object.</param>
        /// <returns>Returns an incremented reference count.</returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IUnknown__AddRef")]
        public static extern UInt32 IUnknown__AddRef(IntPtr ifp);

        /// <summary>
        /// Decrement the reference count of an object.
        /// </summary>
        /// <param name="ifp">Set a pointer to the IUnknown interface object.</param>
        /// <returns>Returns an incremented reference count.</returns>
        /// <remarks>If the decrement results in a reference count of zero, the object is destroyed and the value of <paramref name="ifp"/> is invalid. And then using the same <paramref name="ifp"/> value will cause unexpected results.</remarks>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IUnknown__Release")]
        public static extern UInt32 IUnknown__Release(IntPtr ifp);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ISequentialInStream__Read")]
        private static unsafe extern HRESULT ISequentialInStream__Read(IntPtr ifp, void* data, UInt32 size, out UInt32 processedSize);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ISequentialOutStream__Write")]
        private static unsafe extern HRESULT ISequentialOutStream__Write(IntPtr ifp, void* data, UInt32 size, out UInt32 processedSize);

#if false // IInStream interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IInStream__Seek")]
        public static extern HRESULT IInStream__Seek(IntPtr ifp, Int64 offset, UInt32 seekOrigin, out UInt64 newPosition);

#endif // IInStream interface is not supported by the wrapper.
#if false // IOutStream interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IOutStream__Seek")]
        public static extern HRESULT IOutStream__Seek(IntPtr ifp, Int64 offset, UInt32 seekOrigin, out UInt64 newPosition);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IOutStream__SetSize")]
        public static extern HRESULT IOutStream__SetSize(IntPtr ifp, UInt64 newSize);

#endif // IOutStream interface is not supported by the wrapper.
#if false // IStreamGetSize interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IStreamGetSize__GetSize")]
        public static extern HRESULT IStreamGetSize__GetSize(IntPtr ifp, out UInt64 size);

#endif // IStreamGetSize interface is not supported by the wrapper.
#if false // IOutStreamFinish interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IOutStreamFinish__OutStreamFinish")]
        public static extern HRESULT IOutStreamFinish__OutStreamFinish(IntPtr ifp);

#endif // IOutStreamFinish interface is not supported by the wrapper.
#if false // IStreamGetProps interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IStreamGetProps__GetProps")]
        private static unsafe extern HRESULT IStreamGetProps__GetProps(IntPtr ifp, UInt64* size, void* cTime, void* aTime, void* mTime, UInt32* attrib);

#endif // IStreamGetProps interface is not supported by the wrapper.
#if false // IStreamGetProps2 interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IStreamGetProps2__GetProps2")]
        private static unsafe extern HRESULT IStreamGetProps2__GetProps2(IntPtr ifp, void* props);

#endif // IStreamGetProps2 interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressProgressInfo__SetRatioInfo")]
        private static unsafe extern HRESULT ICompressProgressInfo__SetRatioInfo(IntPtr ifp, UInt64* inSize, UInt64* outSize);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressCoder__Code")]
        private static unsafe extern HRESULT ICompressCoder__Code(IntPtr ifp, NativeInStreamReader inStreamReader, NativeOutStraamWriter outStreamWriter, UInt64* inSize, UInt64* outSize, NativeProgressReporter? progressReporter);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressCoder2__Code")]
        private static unsafe extern HRESULT ICompressCoder2__Code(IntPtr ifp, IntPtr inStreamReaders, UInt64** inSizes, UInt32 numInStreams, IntPtr outStreamWriters, UInt64** outSizes, UInt32 numOutStreams, NativeProgressReporter? progressReporter);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetCoderPropertiesOpt__SetCoderPropertiesOpt")]
        private static unsafe extern HRESULT ICompressSetCoderPropertiesOpt__SetCoderPropertiesOpt(IntPtr ifp, CoderPropID* propIDs, PROPVARIANT* props, UInt32 numProps);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetCoderProperties__SetCoderProperties")]
        private static unsafe extern HRESULT ICompressSetCoderProperties__SetCoderProperties(IntPtr ifp, CoderPropID* propIDs, PROPVARIANT* props, UInt32 numProps);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetDecoderProperties2__SetDecoderProperties2")]
        private static unsafe extern HRESULT ICompressSetDecoderProperties2__SetDecoderProperties2(IntPtr ifp, Byte* data, UInt32 size);

        /// <summary>
        /// Writes the coder's content property to the specified output stream.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressWriteCoderProperties interface object.</param>
        /// <param name="outStreamWriter">Set a delegate for the function that writes the data to the output stream.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressWriteCoderProperties__WriteCoderProperties")]
        public static extern HRESULT ICompressWriteCoderProperties__WriteCoderProperties(IntPtr ifp, NativeOutStraamWriter outStreamWriter);

        /// <summary>
        /// Gets the length of the data that the coder reads from the input stream and processes.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressGetInStreamProcessedSize interface object.</param>
        /// <param name="value">If the call to this function is successful, the total number of bytes of data read and processed from the input stream will be output.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressGetInStreamProcessedSize__GetInStreamProcessedSize")]
        public static extern HRESULT ICompressGetInStreamProcessedSize__GetInStreamProcessedSize(IntPtr ifp, out UInt64 value);

        /// <summary>
        /// Sets the number of threads used by the coder.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressSetCoderMt interface object.</param>
        /// <param name="numThreads">Set the number of threads that the coder can use.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        /// <remarks>The behavior of this method depends on the implementation in the codec. Note that the number of threads actually used by the coder does not always match the value specified by <paramref name="numThreads"/>.</remarks>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetCoderMt__SetNumberOfThreads")]
        public static extern HRESULT ICompressSetCoderMt__SetNumberOfThreads(IntPtr ifp, UInt32 numThreads);

        /// <summary>
        /// Sets whether the coding is complete in one stream.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressSetFinishMode interface object.</param>
        /// <param name="finishMode">Set true if the coding is complete in one stream, false if the coding spans multiple streams.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        /// <remarks>Note that for most codecs, the default behavior if you do not call this method is to code across multiple streams.</remarks>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetFinishMode__SetFinishMode")]
        public static extern HRESULT ICompressSetFinishMode__SetFinishMode(IntPtr ifp, UInt32 finishMode);

#if false // ICompressGetInStreamProcessedSize2 interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressGetInStreamProcessedSize2__GetInStreamProcessedSize2")]
        public static extern HRESULT ICompressGetInStreamProcessedSize2__GetInStreamProcessedSize2(IntPtr ifp, UInt32 streamIndex, out UInt64 value);

#endif // ICompressGetInStreamProcessedSize2 interface is not supported by the wrapper.
        /// <summary>
        /// Sets the amount of memory that the coder can use.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressSetMemLimit interface object.</param>
        /// <param name="memUsage">The size of the memory that can be used by the coder in bytes.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetMemLimit__SetMemLimit")]
        public static extern HRESULT ICompressSetMemLimit__SetMemLimit(IntPtr ifp, UInt64 memUsage);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressReadUnusedFromInBuf__ReadUnusedFromInBuf")]
        private static unsafe extern HRESULT ICompressReadUnusedFromInBuf__ReadUnusedFromInBuf(IntPtr ifp, void* data, UInt32 size, out UInt32 processedSize);

#if false // ICompressGetSubStreamSize interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressGetSubStreamSize__GetSubStreamSize")]
        public static extern HRESULT ICompressGetSubStreamSize__GetSubStreamSize(IntPtr ifp, UInt64 subStream, out UInt64 value);

#endif // ICompressGetSubStreamSize interface is not supported by the wrapper.
        /// <summary>
        /// Set the input stream to the coder.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressSetInStream interface object.</param>
        /// <param name="inStreamReader">Set the delegate for the function that reads the data from the input stream.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetInStream__SetInStream")]
        public static extern HRESULT ICompressSetInStream__SetInStream(IntPtr ifp, NativeInStreamReader inStreamReader);

        /// <summary>
        /// Releases the input stream set in the coder.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressSetInStream interface object.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetInStream__ReleaseInStream")]
        public static extern HRESULT ICompressSetInStream__ReleaseInStream(IntPtr ifp);

#if false // ICompressSetOutStream interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetOutStream__SetOutStream")]
        public static extern HRESULT ICompressSetOutStream__SetOutStream(IntPtr ifp, NativeOutStraamWriter outStreamWriter);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetOutStream__ReleaseOutStream")]
        public static extern HRESULT ICompressSetOutStream__ReleaseOutStream(IntPtr ifp);

#endif // ICompressSetOutStream interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetOutStreamSize__SetOutStreamSize")]
        private static unsafe extern HRESULT ICompressSetOutStreamSize__SetOutStreamSize(IntPtr ifp, UInt64* outSize);

        /// <summary>
        /// Sets the size of the buffer used by the coder for the input stream.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressSetBufSize interface object.</param>
        /// <param name="streamIndex">Set the index number of the stream for which you want to set the size.</param>
        /// <param name="size">Set the amount of memory used for the stream in bytes.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetBufSize__SetInBufSize")]
        public static extern HRESULT ICompressSetBufSize__SetInBufSize(IntPtr ifp, UInt32 streamIndex, UInt32 size);

        /// <summary>
        /// Sets the size of the buffer used by the coder for the output stream.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressSetBufSize interface object.</param>
        /// <param name="streamIndex">Set the index number of the stream for which you want to set the size.</param>
        /// <param name="size">Set the amount of memory used for the stream in bytes.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetBufSize__SetOutBufSize")]
        public static extern HRESULT ICompressSetBufSize__SetOutBufSize(IntPtr ifp, UInt32 streamIndex, UInt32 size);

#if false // ICompressInitEncoder interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressInitEncoder__InitEncoder")]
        public static extern HRESULT ICompressInitEncoder__InitEncoder(IntPtr ifp);

#endif // ICompressInitEncoder interface is not supported by the wrapper.
#if false // ICompressSetInStream2 interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetInStream2__SetInStream2")]
        public static extern HRESULT ICompressSetInStream2__SetInStream2(IntPtr ifp, UInt32 streamIndex, NativeInStreamReader inStreamReader);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressSetInStream2__ReleaseInStream2")]
        public static extern HRESULT ICompressSetInStream2__ReleaseInStream2(IntPtr ifp, UInt32 streamIndex);

#endif // ICompressSetInStream2 interface is not supported by the wrapper.
        /// <summary>
        /// Initialize the filter.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressFilter interface object.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressFilter__Init")]
        public static extern HRESULT ICompressFilter__Init(IntPtr ifp);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressFilter__Filter")]
        private static unsafe extern UInt32 ICompressFilter__Filter(IntPtr ifp, Byte* data, UInt32 size);

        /// <summary>
        /// Gets the number of supported codecs.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressCodecsInfo interface object.</param>
        /// <param name="numMethods">If the call to this function is successful, the number of supported codecs will be output.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressCodecsInfo__GetNumMethods")]
        public static extern HRESULT ICompressCodecsInfo__GetNumMethods(IntPtr ifp, out UInt32 numMethods);

        /// <summary>
        /// Get the property of the codec.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressCodecsInfo interface object.</param>
        /// <param name="index">Set the codec index number.</param>
        /// <param name="propID">Set the ID of the property you want to get.</param>
        /// <param name="value">Set the reference of the <see cref="PROPVARIANT"/> structure to store the value of the retrieved property.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressCodecsInfo__GetProperty")]
        public static extern HRESULT ICompressCodecsInfo__GetProperty(IntPtr ifp, UInt32 index, MethodPropID propID, ref PROPVARIANT value);

        /// <summary>
        /// Create an interface object for the decoder.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressCodecsInfo interface object.</param>
        /// <param name="index">Set the codec index number.</param>
        /// <param name="iid">Set the reference of the <see cref="NativeGUID"/> structure of the interface of the decoder you want to create.</param>
        /// <param name="decoder">If the call to this function is successful, a pointer to the created decoder's interface object will be output. This interface object implements the interface specified by  <paramref name="iid"/>.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        /// <remarks><para>If the call to this function is successful, the reference counter for the retrieved interface object has already been incremented.When you no longer need that interface object, you need to decrement the reference counter by calling the <see cref="IUnknown__Release(IntPtr)"/> function.</para><para>The interface that can be specified for <paramref name="iid"/> is one of the following.:<list type="bullet"><item><description><c>ICompressCoder</c></description></item><item><description><c>ICompressCoder2</c></description></item><item><description><c>ICompressFilter</c></description></item></list></para></remarks>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressCodecsInfo__CreateDecoder")]
        public static extern HRESULT ICompressCodecsInfo__CreateDecoder(IntPtr ifp, UInt32 index, ref NativeGUID iid, out IntPtr decoder);

        /// <summary>
        /// Create an interface object for the decoder.
        /// </summary>
        /// <param name="ifp">Set a pointer to the ICompressCodecsInfo interface object.</param>
        /// <param name="index">Set the codec index number.</param>
        /// <param name="iid">Set the reference of the <see cref="NativeGUID"/> structure of the interface of the encoder you want to create.</param>
        /// <param name="encoder">If the call to this function is successful, a pointer to the created decoder's interface object will be output. This interface object implements the interface specified by  <paramref name="iid"/>.</param>
        /// <returns><para>If the return value is <see cref="HRESULT.S_OK"/>, it means that the call to this function was successful.</para><para>If the return value is not <see cref="HRESULT.S_OK"/>, it means that the call to this function failed.At this time, the return value means the reason for the failure.</para></returns>
        /// <remarks><para>If the call to this function is successful, the reference counter for the retrieved interface object has already been incremented.When you no longer need that interface object, you need to decrement the reference counter by calling the <see cref="IUnknown__Release(IntPtr)"/> function.</para><para>The interface that can be specified for <paramref name="iid"/> is one of the following.:<list type="bullet"><item><description><c>ICompressCoder</c></description></item><item><description><c>ICompressCoder2</c></description></item><item><description><c>ICompressFilter</c></description></item></list></para></remarks>
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICompressCodecsInfo__CreateEncoder")]
        public static extern HRESULT ICompressCodecsInfo__CreateEncoder(IntPtr ifp, UInt32 index, ref NativeGUID iid, out IntPtr encoder);

#if false // ISetCompressCodecsInfo interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ISetCompressCodecsInfo__SetCompressCodecsInfo")]
        private static unsafe extern HRESULT ISetCompressCodecsInfo__SetCompressCodecsInfo(IntPtr ifp, void* compressCodecsInfo);

#endif // ISetCompressCodecsInfo interface is not supported by the wrapper.
#if false // ICryptoProperties interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICryptoProperties__SetKey")]
        private static unsafe extern HRESULT ICryptoProperties__SetKey(IntPtr ifp, Byte* data, UInt32 size);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICryptoProperties__SetInitVector")]
        private static unsafe extern HRESULT ICryptoProperties__SetInitVector(IntPtr ifp, Byte* data, UInt32 size);

#endif // ICryptoProperties interface is not supported by the wrapper.
#if false // ICryptoResetInitVector interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICryptoResetInitVector__ResetInitVector")]
        public static extern HRESULT ICryptoResetInitVector__ResetInitVector(IntPtr ifp);

#endif // ICryptoResetInitVector interface is not supported by the wrapper.
#if false // ICryptoSetPassword interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICryptoSetPassword__CryptoSetPassword")]
        private static unsafe extern HRESULT ICryptoSetPassword__CryptoSetPassword(IntPtr ifp, Byte* data, UInt32 size);

#endif // ICryptoSetPassword interface is not supported by the wrapper.
#if false // ICryptoSetCRC interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_ICryptoSetCRC__CryptoSetCRC")]
        public static extern HRESULT ICryptoSetCRC__CryptoSetCRC(IntPtr ifp, UInt32 crc);

#endif // ICryptoSetCRC interface is not supported by the wrapper.
#if false // IHasher interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IHasher__Init")]
        public static extern void IHasher__Init(IntPtr ifp);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IHasher__Update")]
        private static unsafe extern void IHasher__Update(IntPtr ifp, void* data, UInt32 size);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IHasher__Final")]
        private static unsafe extern void IHasher__Final(IntPtr ifp, Byte* digest);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IHasher__GetDigestSize")]
        public static extern UInt32 IHasher__GetDigestSize(IntPtr ifp);

#endif // IHasher interface is not supported by the wrapper.
#if false // IHashers interface is not supported by the wrapper.
        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IHashers__GetNumHashers")]
        public static extern UInt32 IHashers__GetNumHashers(IntPtr ifp);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IHashers__GetHasherProp")]
        private static unsafe extern HRESULT IHashers__GetHasherProp(IntPtr ifp, UInt32 index, MethodPropID propID, PROPVARIANT* value);

        [DllImport("SevenZip.NativeWrapper.Unmanaged.macOs.x64", EntryPoint = "EXPORTED_IHashers__CreateHasher")]
        private static unsafe extern HRESULT IHashers__CreateHasher(IntPtr ifp, UInt32 index, void** hasher);

#endif // IHashers interface is not supported by the wrapper.
    }
}
