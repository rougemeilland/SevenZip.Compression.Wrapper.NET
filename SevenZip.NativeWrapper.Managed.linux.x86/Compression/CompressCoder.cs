// This file is automatically generated. Do not rewrite manually.

using SevenZip.NativeInterface.Compression;
using SevenZip.NativeInterface.IO;
using SevenZip.NativeWrapper.Managed.linux.x86.Platform;
using System;
namespace SevenZip.NativeWrapper.Managed.linux.x86.Compression
{
    class CompressCoder
        : Unknown, ICompressCoder
    {
        protected CompressCoder(IntPtr nativeInterfaceObject)
            : base(nativeInterfaceObject)
        {
        }

        public static ICompressCoder Create(IntPtr nativeInterfaceObject)
        {
            if (nativeInterfaceObject == IntPtr.Zero)
                throw new ArgumentNullException(nameof(nativeInterfaceObject));

            return new CompressCoder(nativeInterfaceObject);
        }

        void ICompressCoder.Code(SequentialInStreamReader sequentialInStreamReader, SequentialOutStreamWriter sequentialOutStreamWriter, UInt64? inSize, UInt64? outSize, CompressProgressInfoReporter? progressReporter)
        {
            if (sequentialInStreamReader is null)
                throw new ArgumentNullException(nameof(sequentialInStreamReader));
            if (sequentialOutStreamWriter is null)
                throw new ArgumentNullException(nameof(sequentialOutStreamWriter));

            var result =
                UnmanagedEntryPoint.ICompressCoder__Code(
                    NativeInterfaceObject,
                    sequentialInStreamReader,
                    sequentialOutStreamWriter,
                    inSize,
                    outSize,
                    progressReporter);
            if (result != HRESULT.S_OK)
                throw result.GetExceptionFromHRESULT();
        }
    }
}
